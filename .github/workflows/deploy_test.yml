name: Testing Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - develop      

jobs:
  publish:
    runs-on: windows-2019
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      
      - name: Set NuGet Version
        run: echo "NUGET_VERSION=5.x" >> $GITHUB_ENV
       
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE
  
      - name: Create Build Directory
        run: mkdir _build
      
      - name: Restore Packages
        run: nuget restore JBQ\JBQ.sln

      - name: Build Solution
        run: |
          msbuild.exe JBQ\JBQ.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"
          echo "::set-output name=publish_path::$(pwd)/_build"

      - name: Upload to FTP
        run: |
          $ftpServer = "ftp://${{ vars.FTP_SERVER }}"
          $ftpUsername = "${{ vars.FTP_USERNAME }}"
          $ftpPassword = "${{ secrets.FTP_PASSWORD }}" # Asumiendo que la contrase√±a es un secret por seguridad
          $localDir = "./_build"
          $remoteDir = "${{ vars.FTP_REMOTE_DIR }}"

          # Instala WebClient para la transferencia de archivos
          $webClient = New-Object System.Net.WebClient
          $webClient.Credentials = New-Object System.Net.NetworkCredential($ftpUsername, $ftpPassword)

          # Sube los archivos al servidor FTP
          Get-ChildItem -Path $localDir -Recurse | 
            Where-Object { !($_.PSIsContainer) } | 
            ForEach-Object {
              $localPath = $_.FullName
              $remotePath = $remoteDir + $_.FullName.Substring($localDir.Length).Replace("\", "/")
              "Subiendo $localPath a $ftpServer/$remotePath"
              $uri = New-Object System.Uri("$ftpServer/$remotePath")
              $webClient.UploadFile($uri, $localPath)
            }
